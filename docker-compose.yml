version: '3.8'

networks:
  kotel-network:
    external: true # Use the pre-created external network

services:
  kotel-kafka:
    container_name: kotel-kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kotel-zk:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kotel-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - kotel-zk
    networks:
      - kotel-network

  kotel-zk:
    container_name: kotel-zk
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kotel-network

  kotel-pg:
    container_name: kotel-pg
    image: postgres:16
    ports:
      - "5678:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    networks:
      - kotel-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data/:/var/lib/postgresql/data

#  kotel-pyflink:
#    container_name: kotel-pyflink
#    build:
#      context: ./pyflink
#      dockerfile: Dockerfile
#    depends_on:
#      - kotel-pg
#    networks:
#      - kotel-network
#    restart: always
